name: Deploy LibraryConnekto Backend to Google Cloud Run

on:
  push:
    branches: [ "main", "master" ]
    paths:
      - '**'
  workflow_dispatch:

env:
  PROJECT_ID: kabaddiguru
  REGION: us-central1
  SERVICE: libraryconnekto-api
  REPO: libraryconnekto-backend
  IMAGE: us-central1-docker.pkg.dev/kabaddiguru/libraryconnekto-backend/libraryconnekto-api:${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build Docker image
        run: |
          docker build \
            --build-arg PORT=8080 \
            --build-arg UVICORN_WORKERS=2 \
            --build-arg UVICORN_LOG_LEVEL=info \
            -t "$IMAGE" .

      - name: Push image to Artifact Registry
        run: docker push "$IMAGE"

      - name: Create environment file
        run: |
          cat > env-vars.yaml << EOF
          DATABASE_URL: "${{ secrets.DATABASE_URL }}"
          SECRET_KEY: "${{ secrets.SECRET_KEY }}"
          JWT_ALGORITHM: "${{ secrets.JWT_ALGORITHM }}"
          ACCESS_TOKEN_EXPIRE_MINUTES: "${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}"
          ALLOWED_ORIGINS: "${{ secrets.ALLOWED_ORIGINS }}"
          UPLOAD_DIR: "${{ secrets.UPLOAD_DIR }}"
          MAX_FILE_SIZE: "${{ secrets.MAX_FILE_SIZE }}"
          SMTP_HOST: "${{ secrets.SMTP_HOST }}"
          SMTP_PORT: "${{ secrets.SMTP_PORT }}"
          SMTP_USERNAME: "${{ secrets.SMTP_USERNAME }}"
          SMTP_PASSWORD: "${{ secrets.SMTP_PASSWORD }}"
          RAZORPAY_KEY_ID: "${{ secrets.RAZORPAY_KEY_ID }}"
          RAZORPAY_KEY_SECRET: "${{ secrets.RAZORPAY_KEY_SECRET }}"
          EMAIL_SCHEDULER_ENABLED: "${{ secrets.EMAIL_SCHEDULER_ENABLED }}"
          SCHEDULER_INITIAL_DELAY_SECONDS: "${{ secrets.SCHEDULER_INITIAL_DELAY_SECONDS }}"
          SCHEDULER_LOOP_INTERVAL_SECONDS: "${{ secrets.SCHEDULER_LOOP_INTERVAL_SECONDS }}"
          SUBSCRIPTION_CHECKS_DAILY_ENABLED: "${{ secrets.SUBSCRIPTION_CHECKS_DAILY_ENABLED }}"
          SUBSCRIPTION_EMAIL_FROM_SCHEDULER_ENABLED: "${{ secrets.SUBSCRIPTION_EMAIL_FROM_SCHEDULER_ENABLED }}"
          PYTHONDONTWRITEBYTECODE: "1"
          PYTHONUNBUFFERED: "1"
          EOF

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "$SERVICE" \
            --image="$IMAGE" \
            --region="${{ env.REGION }}" \
            --platform=managed \
            --allow-unauthenticated \
            --port=8080 \
            --cpu=2 \
            --memory=2Gi \
            --min-instances=0 \
            --max-instances=10 \
            --timeout=300 \
            --concurrency=80 \
            --service-account=backend-runtime@kabaddiguru.iam.gserviceaccount.com \
            --add-cloudsql-instances="kabaddiguru:us-central1:lb4321" \
            --env-vars-file=env-vars.yaml

      - name: Get service URL
        run: |
          URL=$(gcloud run services describe "$SERVICE" --region "${{ env.REGION }}" --format 'value(status.url)')
          echo "Service deployed at: $URL"
          echo "SERVICE_URL=$URL" >> $GITHUB_ENV

      - name: Test deployment
        run: |
          sleep 30
          curl -f "${{ env.SERVICE_URL }}/health" || exit 1
          echo "Deployment test successful!"

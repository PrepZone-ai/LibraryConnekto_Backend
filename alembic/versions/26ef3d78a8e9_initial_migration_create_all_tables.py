"""Initial migration - create all tables

Revision ID: 26ef3d78a8e9
Revises: 
Create Date: 2025-06-01 17:28:43.289017

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '26ef3d78a8e9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_admin_users_email'), 'admin_users', ['email'], unique=True)
    op.create_table('subscription_plans',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('library_id', sa.UUID(), sa.ForeignKey('admin_details.id'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('duration_months', sa.Integer(), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('original_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('features', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('admin_details',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('admin_name', sa.String(), nullable=False),
    sa.Column('library_name', sa.String(), nullable=False),
    sa.Column('mobile_no', sa.String(length=10), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('total_seats', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('has_shift_system', sa.Boolean(), nullable=True),
    sa.Column('shift_timings', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('referral_code', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['admin_users.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('referral_code')
    )
    op.create_table('referral_codes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['admin_users.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('students',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.String(), nullable=False),
    sa.Column('auth_user_id', sa.UUID(), nullable=False),
    sa.Column('admin_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('mobile_no', sa.String(length=10), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('subscription_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('subscription_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('subscription_status', sa.String(), nullable=True),
    sa.Column('is_shift_student', sa.Boolean(), nullable=True),
    sa.Column('shift_time', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('last_visit', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admin_users.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('auth_user_id'),
    sa.UniqueConstraint('student_id')
    )
    op.create_index(op.f('ix_students_email'), 'students', ['email'], unique=True)
    op.create_table('referrals',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('referral_code_id', sa.UUID(), nullable=False),
    sa.Column('referrer_id', sa.UUID(), nullable=False),
    sa.Column('referred_id', sa.UUID(), nullable=False),
    sa.Column('referred_name', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['referral_code_id'], ['referral_codes.id'], ),
    sa.ForeignKeyConstraint(['referred_id'], ['admin_users.user_id'], ),
    sa.ForeignKeyConstraint(['referrer_id'], ['admin_users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('seat_bookings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=True),
    sa.Column('library_id', sa.UUID(), nullable=True),
    sa.Column('admin_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('mobile', sa.String(), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('subscription_months', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('seat_number', sa.String(), nullable=True),
    sa.Column('approval_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admin_users.user_id'], ),
    sa.ForeignKeyConstraint(['library_id'], ['admin_details.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.auth_user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_attendance',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('admin_id', sa.UUID(), nullable=False),
    sa.Column('entry_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('exit_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_duration', sa.Interval(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admin_users.user_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.auth_user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_exams',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('exam_name', sa.String(), nullable=False),
    sa.Column('exam_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.auth_user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_messages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('admin_id', sa.UUID(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('student_name', sa.String(), nullable=False),
    sa.Column('admin_name', sa.String(), nullable=True),
    sa.Column('admin_response', sa.Text(), nullable=True),
    sa.Column('responded_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('read', sa.Boolean(), nullable=True),
    sa.Column('sender_type', sa.String(), nullable=False),
    sa.Column('is_broadcast', sa.Boolean(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admin_users.user_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('priority', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student_tasks')
    op.drop_table('student_messages')
    op.drop_table('student_exams')
    op.drop_table('student_attendance')
    op.drop_table('seat_bookings')
    op.drop_table('referrals')
    op.drop_index(op.f('ix_students_email'), table_name='students')
    op.drop_table('students')
    op.drop_table('referral_codes')
    op.drop_table('admin_details')
    op.drop_table('subscription_plans')
    op.drop_index(op.f('ix_admin_users_email'), table_name='admin_users')
    op.drop_table('admin_users')
    # ### end Alembic commands ###
